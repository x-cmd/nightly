# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Junhao

xrc http param json str ui ccmd

# TODO: Precompile it into one file.
____x_cmd_gt_xrc(){
    local i
    for i in "$@"; do
    xrc "gitee/lib/$i"
    # . "lib/$i"
    done
}

____x_cmd_gt_xrc utils config current enterprise issue org  \
        repo issue repo_member repo_page repo_pr repo_release repo_tag   \
        repo_utils token user

 
x log init gt

xrc gt/lib/_type/main
# . lib/_type/main

gt(){
    param:dsl       '
subcmd:
    repo                                    "repo command"
    issue                                   "issue"
    pr                                      "pull request"
    member                                  "repo member"
    current                                 "set current owner, repo"
    release                                 "release management"
    enterprise                              "manage enterprise"
    org                                     "manage org"
    tag                                     "repo tag"
    user                                    "user"
    config                                  "save, load, which"
    token                                   "set token"
    new                                     "new client"
'
    param:run
    if [ -z "${PARAM_SUBCMD}" ]; then
        echo "Command Not Found. Show help." >&2
        return 0
    fi

    case "${PARAM_SUBCMD}" in
        pr|release|member|tag)                                  "___x_cmd_gt_repo_${PARAM_SUBCMD}"   "$@"        ;;
        *)                                                      "___x_cmd_gt_${PARAM_SUBCMD}"  "$@"              ;;
    esac
}


############################
# Section 10: Instantiation
############################

___x_cmd_gt_new() {
    param:void
    local name="${1:?Provide object name}"
    # shellcheck disable=SC2139
    alias "$name=\"O=$name gt\""
}

___x_cmd_gt_make() {
    param:void
    local O_ORIGINAL=${1:?Provide client name by O environment}

    # if [ -n "$GITEE_DEFAULT" ] && [ "$O_ORIGINAL" = "GITEE_DEFAULT" ]; then
    #     echo "Name 'GITEE_DEFAULT' is reserved for internal use."
    #     return 1
    # fi

    local O="___x_cmd_gt_$O_ORIGINAL"
    http "@$O" make  'https://gitee.com/api'
    http "@$O_ORIGINAL" header type "application/json;charset=utf-8"
    O=$O_ORIGINAL ___x_cmd_gt_config_load >/dev/null
    if [ $? -eq 0 ] && [ -n "$(O="$O_ORIGINAL" ___x_cmd_gt_token)" ]; then
        O="$O_ORIGINAL" ___x_cmd_gt_current_owner
    else
        gt_log warn "token is null"
    fi
    # local TOKEN=${2:-""}
    # if [ -n "$GITEE_TOKEN" ]; then
    #     printf "Init token with env GITEE_TOKEN\n" >&2
    #     O=$O_ORIGINAL ___x_cmd_gt_token.set "$GITEE_TOKEN"
    # else    #     ___x_cmd_gt_config_load default
    # fi
}
if [ -z "$DO_NOT_INIT_GITEE_DEFAULT" ]; then
    ___x_cmd_gt_make "GITEE_DEFAULT" && DO_NOT_INIT_GITEE_DEFAULT="true"
fi

if [ -z "$XRC_NO_ADVISE" ] && [ -n "${BASH_VERSION}${ZSH_VERSION}" ] && [ "${-#*i}" != "$-" ]; then
    xrc advise/latest
    advise gt
fi

