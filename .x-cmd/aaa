. ./lib/region
. ./lib/getchar


fun(){
    stty -echo
    trap ___x_cmd_ui_region___run_clear INT
    local START=1

    {
        ___x_cmd_pidofsubshell
        (
            local ticks=1
            while true; do
                ticks="$((ticks+1))"
                printf "R:%s:%s:%s\n" "$ticks" "$COLUMNS" "$LINES"
                sleep "${___X_CMD_UI_REFRESH_INTERVAL:-0.1}"
            done
        ) &
        while ___x_cmd_ui_getchar; do
            printf "C:%s:%s\n" "${___X_CMD_UI_GETCHAR_TYPE}" "${___X_CMD_UI_GETCHAR_CHAR}" || break
        done
    } | {
        local PID_OF_UPSUBSHELL
        read -r PID_OF_UPSUBSHELL

        # {
        #     awk '{print $0}'
        # } | {
        {
            trap 'printf "%s\n" "trap2" >> "ccc";
            printf "\033[34h\033[?25h" >&2;
            return 130
            ' INT
            awk '{ if ($0 == "C:special:ENTER") exit(0); print $0 > "/dev/stderr"}'
        }

        kill -SIGPIPE "$PID_OF_UPSUBSHELL"
    }

    printf "%s\n" "___x_cmd_ui_region___run_clear"
    ___x_cmd_ui_region___run_clear
}


# fun







f(){
    {
        while ___x_cmd_ui_getchar; do
            printf "C:%s:%s\n" "${___X_CMD_UI_GETCHAR_TYPE}" "${___X_CMD_UI_GETCHAR_CHAR}" || break
        done
    } | {
        {
        #     awk '{print $0}'
        # } | {
            trap 'printf "%s\n" "trap2";
            printf "\033[34h\033[?25h" >&2;
            return 130
            ' INT
            awk '{ if ($0 == "C:special:ENTER") exit(0); print $0 > "/dev/stderr"}'
        }
    }
}