# shellcheck shell=sh disable=SC3043

# . ./lib/region
xrc ui/lib/region
xrc ui/lib/getchar
xrc awk

# Section: main
___x_cmd_ui_select(){
    local O="${O:-___X_CMD_UI_SELECT_DEFAULT}"
    case "${1}" in
        -)          ___ui_select_clear                       ;;
        +)          shift; ___ui_select_read      "$@"       ;;
        func)       shift; ___ui_select_out_func  "$@"       ;;
        *)          ___ui_select_out "$@"                    ;;
    esac
}

___X_CMD_UI_SELECT_DEFAULT=0
___ui_select_read(){
:
}

___ui_select_clear(){
    local O="${O:-___X_CMD_UI_SELECT_DEFAULT}"
    eval ___X_CMD_UI_SELECT_DEFAULT_ROW_$O=0
    eval "$O="
}


if [ "$(___x_cmd_awk impl)" = "mawk" ]; then
# 881 hh
___x_cmd_ui_select_control_awk(){
    LC_ALL=en_US.UTF-8 command awk \
        -W interactive \
        -v EXIT_OP="$EXIT_OP" \
        -f "$___X_CMD_ROOT/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT/awk/lib/str.awk" \
        -f "$___X_CMD_ROOT/awk/lib/wcwidth.awk" \
        -f "$___X_CMD_ROOT/awk/lib/ui.awk" \
        -f "$___X_CMD_ROOT/ui/lib/share.awk" \
        -f "$___X_CMD_ROOT/ui/lib/theme.awk" \
        -f "$___X_CMD_ROOT/ui/lib/select.awk"
}
else
___x_cmd_ui_select_control_awk(){
    LC_ALL=en_US.UTF-8 command awk \
        -v EXIT_OP="$EXIT_OP" \
        -v RS="$___X_CMD_UI_REGION_RS" -v ORS="$___X_CMD_UI_REGION_RS" \
        -f "$___X_CMD_ROOT/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT/awk/lib/str.awk" \
        -f "$___X_CMD_ROOT/awk/lib/wcwidth.awk" \
        -f "$___X_CMD_ROOT/awk/lib/ui.awk" \
        -f "$___X_CMD_ROOT/ui/lib/share.awk" \
        -f "$___X_CMD_ROOT/ui/lib/select.awk" \
        -f "$___X_CMD_ROOT/ui/lib/theme.awk"
        # -f "./lib/theme.awk"
}
fi

___x_cmd_ui_select_control_display(){
    cat "./.x-cmd/dev/testcase/testlargedata" | awk -v REGION_RS="$___X_CMD_UI_REGION_RS" '{printf $0 REGION_RS}'
    # cat "./.x-cmd/dev/testcase/testdata" | awk -v REGION_RS="$___X_CMD_UI_REGION_RS" '{printf $0 REGION_RS}'
}
___x_cmd_ui_select_control(){
    {
        # printf "UPDATE %s %s${___X_CMD_UI_REGION_RS}" "${COLUMNS}" "${LINES}"
        # IFS="$(printf "$___X_CMD_UI_REGION_RS")"
        # printf "%s%s" "$*" "$___X_CMD_UI_REGION_RS"

        "$@" | ___x_cmd_ui_region_send_update
        cat
    } | ___x_cmd_ui_select_control_awk
}
___ui_select_out_func(){
    ___x_cmd_ui_region_autorefresh_with_keyboard ___x_cmd_ui_select_control "$@"
}
___ui_select_out(){
    ___ui_select_out_func ___x_cmd_ui_select_control_display
}
___ui_select_out1(){
    ___ui_select_out_func "$@"
}

# ___ui_select_out
f(){
    ___ui_select_out1 \
    "Please select the app you want to install:" \
    "Install docker" \
    "Install k8s" \
    "Install minikube" \
    "Install jvm" \
    "Install nvm" \
    "---" \
    "It's the 1 app descriptor." \
    "It's the 2 app descriptor." \
    "It's the 3 app descriptor." \
    "It's the 4 app descriptor." \
    "It's the 5 app descriptor." \
    "---"


    echo "___X_CMD_UI_SELECT_FINAL_COMMAND:" "$___X_CMD_UI_SELECT_FINAL_COMMAND"
    i=1
    while [ "$i" -le "$___X_CMD_UI_SELECT_MULTIPLE_LEN" ];do

        eval printf "\"___X_CMD_UI_SELECT_ITEM_INDEX$i:%s\n\"" "\"\$___X_CMD_UI_SELECT_ITEM_INDEX$i\""
        eval printf "\"___X_CMD_UI_SELECT_ITEM$i:%s\n\"" "\"\$___X_CMD_UI_SELECT_ITEM$i\""
        i=$((i+1))
    done

    echo "\n___X_CMD_UI_SELECT_CURRENT_ITEM_INDEX:" "$___X_CMD_UI_SELECT_CURRENT_ITEM_INDEX"
    echo "___X_CMD_UI_SELECT_CURENT_ITEM:" "$___X_CMD_UI_SELECT_CURENT_ITEM"
    echo "___X_CMD_UI_SELECT_MULTIPLE_LEN:" "$___X_CMD_UI_SELECT_MULTIPLE_LEN"
}
# f