# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gt_config(){
    param:dsl       '
subcmd:
    which       "Show current config path"
    save        "Save the config in memory into file"
    load        "Load the config from config path"
'
    param:run
    if [ -z "$PARAM_SUBCMD" ]; then
        gt_log warn "Subcmd Not Found."
        ___x_cmd_gt_config _param_help_doc
        return 1
    fi

    "___x_cmd_gt_config_${PARAM_SUBCMD}" "$@"
}

___x_cmd_gt_config_which() {
    param:void
    local O="${O:-GITEE_DEFAULT}"
    printf "%s" "$HOME/.x-cmd/.config/x-bash/app.gitee.config/$O"
}

# TODO:config
___x_cmd_gt_config_save() {
    param:void
    local O="${O:-GITEE_DEFAULT}"
    local ___gitee_path="${1:-$HOME/.x-cmd/.config/x-bash/app.gitee.config/$O}"
    [ ! -e "$___gitee_path" ] && mkdir -p "$___gitee_path##*/"
    ___x_cmd_gt_default dump "gitee_$O">"$___gitee_path" && ___x_cmd_ui tf "true" \
    "$(ui bold "Config $O saved in path:") $(ui yellow underline "$___gitee_path")" && return 0
    gt_log error "gt config save Fail"
}

# shellcheck disable=SC2120
___x_cmd_gt_config_load() {
    param:void
    local O="${O:-GITEE_DEFAULT}"
    local ___gitee_path="${1:-$HOME/.x-cmd/.config/x-bash/app.gitee.config/$O}"
    [ ! -f "$___gitee_path" ] && gt_log warn "There is no history config" && return
    ___x_cmd_gt_default load "gitee_$O" "$___gitee_path"
    local token
    token="$(___x_cmd_gt_default get "gitee_$O" token)"
    http "@___x_cmd_gt_${O:-GITEE_DEFAULT}" header put Authorization "token $token"
}
