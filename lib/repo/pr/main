# shellcheck shell=sh
# shellcheck disable=SC2039,3043


___x_cmd_gt_repo_pr(){
    param:dsl       '
subcmd:
    ls              "list pull requests"
    info            "pull request info"
    log             "pull requests log"
    commit          "get pull requests commit"
    view            "open pull request in browser"
    create          "create pull request"
    update          "update pull requests"
    merge           "merge pull requests"
    assign          "assign request to somebody"
    testers         "Designation pull requests testers"
'
    param:run
    if [ -z "$PARAM_SUBCMD" ]; then
        gt_log warn "Subcmd Not Found."
        ___x_cmd_gt_repo_pr _param_help_doc
        return 1
    fi

    "___x_cmd_gt_repo_pr_${PARAM_SUBCMD}" "$@"
}


# Section: ls info log commit view

___x_cmd_gt_repo_pr_ls() {

    param:scope     "gitee/$O"
    param:dsl       '
type:
    State = open merged closed all
    Sort  = created updated popularity long-running
    Direction = desc asc
options:
    --repo              "Repo name"                                         <>
    --state             "state"                                             <>:State="open"
    --head              "source branch. Format: [username:]<branch>"        <>=""
    --base              "target branch. Format: [username:]<branch>"        <>=""
    --since             "since"                                             <>=""
    --sort              "sort"                                              <>:Sort="created"
    --direction         "direction"                                         <>:Direction="desc"
    --milestone_number  "milestone id"                                      <>:numbers=""
    --labels            "labels"                                            <>=""
'
    param:run

    ___x_cmd_gt_param_init_owner_repo
    ______x_cmd_gt_get "/v5/repos/$owner_repo/pulls" state head base sort since \
        direction milestone_number labels page per_page
}

# Assume pr and owner_repo are environments
___parse_pr_init_owner_repo_and_pr_main(){
    local pr_number=${pr##*/}
    owner_repo=${pr%/$pr_number}
    ______x_cmd_gt_param_normalize_repo "$owner_repo"
    pr="$pr_number"
}

alias ___parse_pr_init_owner_repo_and_pr='
    local pr
    local owner_repo
    ___parse_pr_init_owner_repo_and_pr_main || return
'

___x_cmd_gt_repo_pr_info() {
    param:scope     "gitee/$O"
    param:dsl       '
options:
    #1|--pr             "pr id"     <>:number
'
    param:run

    ___parse_pr_init_owner_repo_and_pr

    ______x_cmd_gt_get "/v5/repos/${owner_repo}/pulls/$pr"
}


___x_cmd_gt_repo_pr_log() {
    param:scope     "gitee/$O"
    param:dsl       '
type:
    State  = desc asc
options:
    #1|--pr             "pr id"                 <>:number
    --sort              "sort"                  <>:State="desc"
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ______x_cmd_gt_get "/v5/repos/${owner_repo}/pulls/$pr/operate_logs" sort
}

___x_cmd_gt_repo_pr_commit() {
    param:scope     "gitee/$O"
    param:dsl       '
options:
    #1|--pr             "pr id"                <>
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ______x_cmd_gt_get "/v5/repos/${owner_repo}/pulls/$pr/commits"
}

___x_cmd_gt_repo_pr_view() {
    param:scope     "gitee/$O"
    param:dsl       '
options:
    #1|--pr             "pr id"         <>:number
'
    param:run

    ___parse_pr_init_owner_repo_and_pr

    http browse "https://gitee.com/${owner_repo}/pulls/$pr"
}

# EndSection

# Section: create update merge

___x_cmd_gt_repo_pr_create() {
    local O="${O:-GITEE_DEFAULT}"
    param:scope     "gitee/$O"
    param:dsl       '
type:
    Bool = true false
options:
    --repo                  "Repo name"                                                     <>:repo
    --title                 "pr title"                                                      <>
    --head                  "source branch. Format: [username:]<branch>"                    <>:name
    --base                  "target branch. Format: [username:]<branch>"                    <>:name
    --body                  "pull request content"                                          <>=""
    --milestone_number      "milestone id"                                                  <>:numbers=""
    --labels                "labels"                                                        <>=""
    --issue                 "issue id"                                                      <>:numbers=""
    --assignees             "reviewer username list. Format: <username>[,<username>]"       <>:name=""
    --testers               "tester username list. Format: <username>[,<username>]"         <>:name=""
    --assignees_number      "minimum number of reviewers"                                   <>:numbers=""
    --testers_number        "minimum test number"                                           <>:numbers=""
    --prune_source_branch   "prune_source_branch"                                           <>:Bool=false
'
    param:run

    ___x_cmd_gt_param_init_owner_repo

    ______x_cmd_gt_post_json "/v5/repos/$owner_repo/pulls" title head base body milestone_number\
        labels issue assignees testers assignees_number testers_number prune_source_branch
}

___x_cmd_gt_repo_pr_update() {
    local O="${O:-GITEE_DEFAULT}"
    param:scope     "gitee/$O"
##TODO:state
    param:dsl       '
type:
    State = closed
options:
    #1|--pr                 "pr number"                                 <>:number
    --title                 "pr title"                                  <>
    --body                  "pull request content"                      <>=""
    --milestone_number      "milestone number"                          <>:numbers=""
    --labels                "labels"                                    <>=""
    --assignees_number      "minimum number of reviewers"               <>:numbers=""
    --testers_number        "minimum test number"                       <>:numbers=""
    --state                 "state"                                     <>:State="closed"
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ______x_cmd_gt_patch_json "/v5/repos/${owner_repo}/pulls/$pr" title body milestone_number\
        labels assignees_number testers_number state
}

___x_cmd_gt_repo_pr_merge() {
    param:scope     "gitee/$O"
    param:dsl       '
type:
    Merge = squash  merge
options:
    #1|--pr                 "pr id"                                     <>
    --merge_method          "merge method(squash,merge)"                <>:Merge="merge"
    --prune_source_branch   "prune source branch"                       <>:bool="false"
    --title                 "title"                                     <>=""
    --description           "description"                               <>=""
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ______x_cmd_gt_put_json "/v5/repos/${owner_repo}/pulls/$pr/merge"  merge_method \
        prune_source_branch title description
}

# EndSection

