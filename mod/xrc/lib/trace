
___x_cmd_trace_log(){
    if [ -n "$___X_CMD_LOG_C_TF" ] || [ -t 2 ]; then
        printf "\033[1;7;32m%s\033[0m\n"   "$1"  >&2
    else
        printf "%s\n"               "$1"  >&2
    fi
}

___x_cmd_trace(){
    local old_trace_name="${___X_CMD_TRACE_LINE_LOCAL}"
    ___X_CMD_TRACE_LINE_LOCAL="$1"

    local new_trace_name="${1:?Provide New Trace}"

    [ -z "$___X_CMD_TRACE_DEBUGTRIG" ] || { eval [ "\${___X_CMD_LOG__${new_trace_name%%/*}:-2}" -le 1 ] && ___X_CMD_LOG_DEBUG=1; }
    { [ -n "$___X_CMD_LOG_DEBUG" ] || eval [ "\${___X_CMD_LOG__${new_trace_name%%/*}:-2}" -le 1 ] \&\& [ "\${___X_CMD_LOG__${old_trace_name%%/*}:-2}" -le 1 ]; } || return

    if [ -z "$old_trace_name" ] || [ "${1#"$old_trace_name"}" != "$1" ]; then
        ___x_cmd_trace_log "[TRACE]: [${old_trace_name:-/}] >>> [${1#"$old_trace_name"/}] "
        return
    fi

    local i
    local common
    local rest="${old_trace_name}"
    local e
    local IFS="/"
    for i in ${1}; do
        e="${rest#"$i"}"
        [ "${e}" != "$rest" ] || break
        common="$common/${i}"
        rest="${e#/}"
    done

    common="${common#/}"
    ___x_cmd_trace_log "[TRACE]: [${common}]: [$rest => ${1#"$common/"}]"
}

___x_cmd_trace_debugtrig(){
    ___X_CMD_TRACE_DEBUGTRIG=1
}

___x_cmd_trace_debugtrig_stop(){
    ___X_CMD_TRACE_DEBUGTRIG=
}

alias x.trace.dbgtrig.stop=___x_cmd_trace_debugtrig_stop
alias x.trace.dbgtrig=___x_cmd_trace_debugtrig

alias x:trace='local ___X_CMD_LOG_DEBUG="${___X_CMD_LOG_DEBUG}"; local ___X_CMD_TRACE_LINE_LOCAL="${___X_CMD_TRACE_LINE_LOCAL}" 2>/dev/null; ___x_cmd_trace'

# f_a_c(){
#     x:trace f/a/c
#     echo "$1"
# }

# f_a_b(){
#     x:trace f/a/b
#     echo "$1"
#     f_a_c 111
# }

# f_a(){
#     x:trace f/a
#     f_a_b 1
# }

# f_a
