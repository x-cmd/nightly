
# Section: attr
___x_cmd_pkg___static_build_attr(){
    eval "$(___x_cmd_pkg___static_build_attr_code "$@")"
}
___x_cmd_pkg___static_build_attr_code(){
    ___x_cmd_pkg___all_info "$@" | awk \
        -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg._.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg.static_build.awk"
}
# ___x_cmd_pkg___attr   hook.install,hook.setup
___x_cmd_pkg___attr(){
    eval "$(___x_cmd_pkg___attr_code "$@")"
}

___x_cmd_pkg___attr_code(){
    local QUERY="${4:?Provide pat}"
    ___x_cmd_pkg___all_info "$@" | awk \
        -v QUERY="$QUERY" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg._.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg.attr.awk"
}
# EndSection

# Section: script
# Get Script Path
___x_cmd_pkg___get_script_path(){
    local script="${4:?Provide sciprt}"

    ___x_cmd_pkg___all_info "$@" | awk \
        -v SCRIPT="$script" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg._.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg.script.awk"
}
# EndSection

# Section: osarch
___x_cmd_pkg_osarch(){
    if [ -z "$___X_CMD_PKG_OSARCH" ]; then
        ___X_CMD_PKG_OSARCH="$(os name)/$(os arch)"
    fi
    printf "%s\n" "$___X_CMD_PKG_OSARCH"
}
# EndSection

# Section: get raw text from all.7z
___x_cmd_pkg_locate(){
    local tgt="${1:?Provide name}"
    ___x_cmd_pkg_ls | awk -v FS=/ -v tgt="$tgt" '$2==tgt{ print $0; exit 0; }'
}

# ___x_cmd_pkg___meta_fp(){
#     local s
#     s="$(___x_cmd_pkg_locate "${1:?Provide name}")" || return
#     printf "%s/%s/meta.tt.json" "$___X_CMD_PKG_RAWPATH" "$s"
# }

# ___x_cmd_pkg___version_fp(){
#     local s
#     s="$(___x_cmd_pkg_locate "${1:?Provide name}")" || return
#     printf "%s/%s/version.tt.json" "$___X_CMD_PKG_RAWPATH" "$s"
# }

# Default, China
___x_cmd_pkg___all_info(){
    local pkg_name="${1:?Provide pkg name}"
    local version="${2:-""}"
    local osarch="${3:-${___X_CMD_PKG_OSARCH:-$(___x_cmd_pkg_osarch)}}"

    pkg_name="$(___x_cmd_pkg_locate "$pkg_name")" || return

    pkg:debug "Function ___x_cmd_pkg___all_info(). pkg_name: $pkg_name version: $version osarch: $osarch ___X_CMD_PKG_RAWPATH: $___X_CMD_PKG_RAWPATH ___X_CMD_WHICHNET: $___X_CMD_WHICHNET"
    printf "%s\n%s\n%s\n%s\n%s\n" "$pkg_name" "$version" "$osarch" "$___X_CMD_PKG_RAWPATH" "$___X_CMD_WHICHNET"

    cat "$___X_CMD_PKG_RAWPATH/$pkg_name/meta.tt.json"
    printf "\n"
    cat "$___X_CMD_PKG_RAWPATH/$pkg_name/version.tt.json"
}
# EndSection

___x_cmd_pkg___list(){
    local expr="${4:?Provide EXPR, like bin, url.cn}"

    ___x_cmd_pkg___all_info "$@" | awk \
        -v EXPR="$expr" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg._.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg.list.awk"
}


___x_cmd_pkg___default_version(){

    ___x_cmd_pkg___all_info "$@" | awk \
        -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/jqparse.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/util.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg._.awk" \
        -f "$___X_CMD_ROOT_MOD/pkg/lib/awk/pkg.default_version.awk"
}
