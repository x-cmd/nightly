
# TODO: Multiple thread
# TODO: Download Manager and more strategy
# TODO: Maybe using a P2P share connection for mirror downloading.

___x_cmd_pkg_download(){
    local pkg_name="${1:?Provide pkg name}"
    local version="${2:?Provide version}"
    local osarch="${3:-${___X_CMD_PKG_OSARCH:-$(___x_cmd_pkg_osarch)}}"

    local url_list
    local file_suffix
    url_list="$(___x_cmd_pkg___list "$@" "$osarch" "url.${___X_CMD_WHICHNET:-_}" )"
    ___x_cmd_pkg___attr "$@" "$osarch" file_suffix

    local url
    local ball="$___X_CMD_PKG_DOWNLOAD_PATH/$pkg_name/$version.$file_suffix"
    pkg:debug "Download url_list: $url_list ball: $ball"

    local md5
    local sha1
    local sha256
    local sha512

    ___x_cmd_pkg___attr "$@" "$osarch" "md5,sha1,sha256,sha512"

    if [ -f "$ball" ]; then
        ! ___x_cmd_pkg_download___check_hashsum "$ball" "$md5" "$sha1" "$sha256" "$sha512" || return 0

        pkg:warn "File corrupted. Download the $ball again."
        x rmrf "$ball"
    fi

    while read -r url; do
        # TODO: ___x_cmd_httpget support 302
        # ___x_cmd_httpget "$url" "$ball" || {
        curl --progress-bar --location --retry-max-time 10 --retry 0 "$url" --output "$ball" || {
            pkg:warn "Fail to download from $url"
            continue
        }

        ! ___x_cmd_pkg_download___check_hashsum "$ball" "$md5" "$sha1" "$sha256" "$sha512" || return 0

        pkg:warn "File corrupted."
        x rmrf "$ball"
    done <<A
$url_list
A

}

___x_cmd_pkg_download___check_hashsum(){
    local filepath="$1"

    local md5="$2"
    local sha1="$3"
    local sha256="$4"
    local sha512="$5"

    if [ -n "$sha512" ]; then
        [ "$(___x_cmd_sha512 "$filepath")" != "$sha512" ]
    elif [ -n "$sha256" ]; then
        [ "$(___x_cmd_sha256 "$filepath")" != "$sha256" ]
    elif [ -n "$sha1" ]; then
        [ "$(___x_cmd_sha1 "$filepath")" != "$sha1" ]
    elif [ -n "$md5" ]; then
        [ "$(___x_cmd_md5 "$filepath")" != "$md5" ]
    else
        # In the future, will return 1
        x:warn "No checksum provided."
        return 0
    fi

}
