# shellcheck shell=sh   disable=SC3043,SC1090,SC1091
___x_cmd_ws_run(){
    x:trace x/ws

    if [ -z "$1" ]; then
        if ___x_cmd_search_path_ . ".x-cmd/ws"; then
            ___x_cmd_exe_workspace "$___X_CMD_SEARCH_PATH_RESULT/.x-cmd/ws"
            return
        else
            printf "%s\n" "Cannot find .x-cmd/ws" >&2
            return 1
        fi
    fi

    local RESOURCE_NAME="$1"; shift
    if ___x_cmd_search_path_ . ".x-cmd/ws"; then
        ___x_cmd_exe_workspace "$___X_CMD_SEARCH_PATH_RESULT/.x-cmd/ws" "$RESOURCE_NAME" "$@"
    elif ___x_cmd_search_path_ . ".x-cmd/$RESOURCE_NAME"; then
        ___x_cmd_exe_workspace "$___X_CMD_SEARCH_PATH_RESULT/.x-cmd/$RESOURCE_NAME" "$@"
        return
    else
        ___x_cmd_ws_run_default
        if [ "$___X_CMD_WS___EXE_DEFAULT_TMP_LAST" != "$___X_CMD_WS___EXE_DEFAULT_TMP" ]; then
            ___X_CMD_WS___EXE_DEFAULT_TMP_LAST="$___X_CMD_WS___EXE_DEFAULT_TMP"
            . "$___X_CMD_ROOT_MOD/ws/lib/default/_"
        fi
        ___x_cmd_ws___exe_default___ "$___X_CMD_WS___EXE_DEFAULT_TMP_LAST" "$@"
    fi
}

___x_cmd_ws_run_default(){
    if [ -f "$(___x_cmd_ws_root)/setup.py" ]; then
        ___X_CMD_WS___EXE_DEFAULT_TMP=python
    elif [ -f "$(___x_cmd_ws_root)/tsconfig.json" ]; then
        ___X_CMD_WS___EXE_DEFAULT_TMP=typescript
    elif [ -f "$(___x_cmd_ws_root)/package.json" ]; then
        ___X_CMD_WS___EXE_DEFAULT_TMP=node
    elif [ -f "$(___x_cmd_ws_root)/gosum" ]; then
        ___X_CMD_WS___EXE_DEFAULT_TMP=go
    elif [ -f "$(___x_cmd_ws_root)/pom.xml" ]; then
        ___X_CMD_WS___EXE_DEFAULT_TMP=java/maven
    elif [ -f "$(___x_cmd_ws_root)/build.gradle" ]; then
        ___X_CMD_WS___EXE_DEFAULT_TMP=java/gradle
    elif [ -f "$(___x_cmd_ws_root)/build.kt" ]; then
        ___X_CMD_WS___EXE_DEFAULT_TMP=java/gradle/kotlin
    else
        ws:error "No default script found in this environment."
    fi
}

___x_cmd_ws_exec(){
    local RESOURCE_NAME="$1"; shift

    if ___x_cmd_search_path_ . ".x-cmd/$RESOURCE_NAME"; then
        ___x_cmd_exe_workspace "$___X_CMD_SEARCH_PATH_RESULT/.x-cmd/$RESOURCE_NAME" "$@"
        return
    else
        printf "Workspace Resource Not found: %s\n" "$RESOURCE_NAME" >&2
        return 1
    fi
}

# Section : Find And Execute at .x-cmd folder

___x_cmd_exe_workspace(){
    local filepath="${1:?filepath}"
    if [ -L "$filepath" ]; then
        filepath="$(___x_cmd_readlink_recursive "$filepath")"
        filepath="$(___x_cmd_abspath "$filepath")"
    fi

    shift
    if [ -x "$filepath" ]; then
        exec 3>&1
        local err
        if err="$("$filepath" "$@" 2>/dev/stdout 1>&3)"; then
            exec 3<&-
            printf "%s\n" "$err" >&2
            return
        else
            local code=$?
            # Bad interpreter
            if [ $code != 126 ] && [ $code != 127 ] && [ "${err%Permission denied}" = "$err" ]; then
                ___x_cmd_run_by_file_ext "$filepath" "$@"
                return
            fi
        fi
    fi

     # workspace
    ___X_CMD_WSROOT="$filepath"
    ___X_CMD_WSROOT="$(dirname "$___X_CMD_WSROOT")"
    ___X_CMD_WSROOT="$(cd "$___X_CMD_WSROOT" && pwd)/"
    ___X_CMD_WSROOT="${___X_CMD_WSROOT%/.x-cmd/*}"

    export ___X_CMD_WSROOT

    ___x_cmd_run_by_file "$filepath" "$@"
    if [ $? = 126 ]; then
        cat >&2 <<A
Cannot find out how to execute the file: "$filepath". Please specify the execution engine. For more information, consult 'x help'
A
    fi

}

# EndSection
