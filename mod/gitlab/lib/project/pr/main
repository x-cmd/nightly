# shellcheck shell=sh
# shellcheck disable=SC2039,3043


___x_cmd_gitlab_repo_pr(){
    param:subcmd ___x_cmd_gitlab_repo_pr                            \
        ls              "List pull requests"                    \
        log             "List pull requests log"                \
        commit          "List pull requests commit"             \
        info            "Show pull request info"                \
        view            "open pull request in browser"          \
        create          "Create pull request"                   \
        update          "Update pull requests"                  \
        merge           "Merge pull requests"                   \
        assign          "Assign request to somebody"            \
        testers         "Designation pull requests testers"
    param:subcmd:try
    param:run

    ___x_cmd_gitlab_repo_pr _param_help_doc
    gitlab_log warn "Subcmd Not Found."
    return 1
}


# Section: ls info log commit view

___x_cmd_gitlab_repo_pr_ls(){

    param:scope     ___x_cmd_gitlab
    param:dsl       '
type:
    State = open merged closed all
    Sort  = created updated popularity long-running
    Direction = desc asc
options:
    --repo              "Provide owner name and repo name.(default:the current user repo)"   <>:RepoName
    --state             "state"                                                              <>:State="open"
    --head              "source branch. Format: [username:]<branch>"                         <>=""
    --base              "target branch. Format: [username:]<branch>"                         <>=""
    --since             "since"                                                              <>=""
    --sort              "sort"                                                               <>:Sort="created"
    --direction         "direction"                                                          <>:Direction="desc"
    --milestone_number  "milestone id"                                                       <>:NatureNumber=""
    --labels            "labels"                                                             <>=""
'
    param:run
    ___x_cmd_gitlab_param_init_owner_project

    ___gitlab_ui_mutual ___x_cmd_gitlab_get_multi "/repos/${owner_project}/pulls" state head base sort since direction milestone_number \
        labels page per_page <<A
            ___ui_table_json Id=.id Title=.title Body=.body User=.user.login TargetBranch=.base.ref SourceBranch=.head.ref \
                CreateTime=.created_at UpdateTime=.updated_at Url=.html_url -- \$@
A
}

# Assume pr and owner_project are environments
___parse_pr_init_owner_repo_and_pr_main(){
    local pr_number=${pr##*/}
    owner_project=${pr%/$pr_number}
    ___x_cmd_gitlab_param_normalize_repo "$owner_project"
    pr="$pr_number"
}

alias ___parse_pr_init_owner_repo_and_pr='
    local pr
    local owner_project
    ___parse_pr_init_owner_repo_and_pr_main || return
'

___x_cmd_gitlab_repo_pr_info(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--pr             "pr id"     <>:NatureNumber
'
    param:run

    ___parse_pr_init_owner_repo_and_pr

    ___x_cmd_gitlab_http get "/repos/${owner_project}/pulls/$pr"
}


___x_cmd_gitlab_repo_pr_log(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
type:
    State  = desc asc
options:
    #1|--pr             "pr id"                 <>:NatureNumber
    --sort              "sort"                  <>:State="desc"
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ___x_cmd_gitlab_http get "/repos/${owner_project}/pulls/$pr/operate_logs" sort
}

___x_cmd_gitlab_repo_pr_commit(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--pr             "pr id"                <>
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ___x_cmd_gitlab_http get "/repos/${owner_project}/pulls/$pr/commits"
}

___x_cmd_gitlab_repo_pr_view(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--pr             "pr id"         <>:NatureNumber
'
    param:run

    ___parse_pr_init_owner_repo_and_pr

    ___x_cmd_http browse "https://gitee.com/${owner_project}/pulls/$pr"
}

# EndSection

# Section: create update merge

# shellcheck disable=SC2154,SC2181
___x_cmd_gitlab_repo_pr_create(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
type:
    Bool = true false
options:
    --repo                  "Provide owner name and repo name.(default:the current user repo)"   <>:RepoName
    --title                 "pr title"                                                           <>
    --head                  "source branch. Format: [username:]<branch>"                         <>:UserName
    --base                  "target branch. Format: [username:]<branch>"                         <>:UserName
    --body                  "pull request content"                                               <>=""
    --milestone_number      "milestone id"                                                       <>:NatureNumber=""
    --labels                "labels"                                                             <>=""
    --issue                 "issue id"                                                           <>:NatureNumber=""
    --assignees             "reviewer username list. Format: <username>[,<username>]"            <>:UserName=""
    --testers               "tester username list. Format: <username>[,<username>]"              <>:UserName=""
    --assignees_number      "minimum number of reviewers"                                        <>:NatureNumber=""
    --testers_number        "minimum test number"                                                <>:NatureNumber=""
    --prune_source_branch   "prune_source_branch"                                                <>:Bool=false
'
    param:run

    ___x_cmd_gitlab_param_init_owner_project
    local data
    local title
    local state
    local html_url
    data="$(___x_cmd_gitlab_http post "/repos/$owner_project/pulls" title head base body milestone_number \
        labels issue assignees testers assignees_number testers_number prune_source_branch)"
    ___x_cmd_gitlab_json_query_rename "$data" title=.title state=.state html_url=.html_url
    if [ -n "$title" ];then
        ___x_cmd_ui tf "true" "Success" "title: $title" "owner_project: $owner_project" "state: $state" \
         "base: $base" "source branch: $head" "target branch: $base" "url: $html_url"
        return 0
    else
        gitlab_log error "Create pull request failure: $title by $owner_project $base"
        return 1
    fi
}

___x_cmd_gitlab_repo_pr_update(){
    param:scope     ___x_cmd_gitlab
##TODO:state
    param:dsl       '
type:
    State = closed
options:
    #1|--pr                 "pr number"                                 <>:NatureNumber
    --title                 "pr title"                                  <>
    --body                  "pull request content"                      <>=""
    --milestone_number      "milestone number"                          <>:NatureNumber=""
    --labels                "labels"                                    <>=""
    --assignees_number      "minimum number of reviewers"               <>:NatureNumber=""
    --testers_number        "minimum test number"                       <>:NatureNumber=""
    --state                 "state"                                     <>:State="closed"
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ___x_cmd_gitlab_http patch "/repos/${owner_project}/pulls/$pr" title body milestone_number\
        labels assignees_number testers_number state
}

___x_cmd_gitlab_repo_pr_merge(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
type:
    Merge = squash  merge
options:
    #1|--pr                 "pr id"                                     <>
    --merge_method          "merge method(squash,merge)"                <>:Merge="merge"
    --prune_source_branch   "prune source branch"                       <>:Bool="false"
    --title                 "title"                                     <>=""
    --description           "description"                               <>=""
'
    param:run

    ___parse_pr_init_owner_repo_and_pr
    ___x_cmd_gitlab_http put json "/repos/${owner_project}/pulls/$pr/merge"  merge_method \
        prune_source_branch title description
}

# EndSection

