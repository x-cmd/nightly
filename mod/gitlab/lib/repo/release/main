# shellcheck shell=sh
# shellcheck disable=SC2039,3043

___x_cmd_gitlab_repo_release(){
    param:subcmd ___x_cmd_gitlab_repo_release                       \
        ls              "List repo's release"                   \
        create          "Create repo release"                   \
        update          "Update release information"            \
        rm              "Remove repo release"                   \
        latest          "Show latest release"                   \
        info            "Show detailed information of repo"     \
        attachment      "attachment management"
    param:subcmd:try
    param:run

    ___x_cmd_gitlab_repo_release _param_help_doc
    gt_log warn "Subcmd Not Found."
    return 1
}

# shellcheck disable=SC2086,SC2154
# https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoReleases
___x_cmd_gitlab_repo_release_ls(){
    param:scope     ___x_cmd_gt
    param:dsl    '
type:
    Direction = asc  desc
options:
    --repo          "Provide owner name and repo name.(default:the current user repo)"   <>:RepoName
    --direction     "direction(asc,desc)"                                                <>:Direction="asc"
'
    param:run
    ___x_cmd_gitlab_param_init_owner_repo

    ___gt_ui_mutual ___x_cmd_gitlab_http get "/v5/repos/${owner_repo}/releases" direction page per_page <<A
        ___ui_table_json Id=.id ReleaseName=.name TagName=.tag_name Message=.body \
            IsPreRelease=.prerelease User=.author.login Time=.created_at -- \$@
A
}

# shellcheck disable=SC2086,SC2154
# TODO:https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoReleasesTagsTag
___x_cmd_gitlab_repo_get_release_by_tag(){
    param:scope     ___x_cmd_gt
    param:dsl    '
options:
    #1|--repo          "Provide owner name and repo name.(default:the current user repo)"   <>:RepoName
    #2|--tag           "tag name"                                                           <>
'
    param:run
    ___x_cmd_gitlab_param_init_owner_repo

    ___x_cmd_gitlab_http get "/v5/repos/${owner_repo}/releases/tags/${tag}"
}

# shellcheck disable=SC2154,SC2181
# https://gitee.com/api/v5/swagger#/postV5ReposOwnerRepoReleases
___x_cmd_gitlab_repo_release_create(){
    param:scope  ___x_cmd_gt
    param:dsl    '
options:
    #1|--repo           "Provide owner name and repo name.(default:the current user repo)"   <>:RepoName
    --tag               "Please provide tag name"                                            <>
    --name              "Release name"                                                       <>
    --body              "Release Description"                                                <>
    --prerelease        "Is pre-release version"                                             <>:Bool="false"
    --target_commitish  "Default is master"                                                  <>="master"
'
    param:run
    local gen_gt_json
    gen_gt_json="$(param:option2json tag_name=tag -tag)"
    ___x_cmd_gitlab_param_init_owner_repo

    printf "%s" "$gen_gt_json" | ___x_cmd_gitlab_http post "/v5/repos/${owner_repo}/releases" - | \
        ___x_cmd_gitlab_repo_release_create_status_handler
}

___x_cmd_gitlab_repo_release_create_status_handler(){
    if [ ! -t 1 ] || [ -n "$ENFORCE_JSON" ]; then
        cat
        return
    fi

    ___x_cmd_git_json_query_rename name=.name tag_name=.tag_name prerelease=.prerelease
    if [ -n "$tag_name" ]; then
        ___x_cmd_ui_tf true     "Release Successfully" "name: $name"
    else
        ___x_cmd_ui_tf false    "Release failure: $name."
        return 1
    fi
}


# Assume pr and owner_repo are environments
______x_cmd_gitlab_repo_release_init_owner_repo_and_release_main(){
    local release_id=${release##*/}
    owner_repo=${release%$release_id}

    owner_repo="$(___x_cmd_gitlab_param_normalize_repo "$owner_repo")"
    release="${release_id}"
}

alias ______x_cmd_gitlab_repo_release_init_owner_repo_and_release="
    local owner_repo
    ______x_cmd_gitlab_repo_release_init_owner_repo_and_release_main || return
"


# shellcheck disable=SC2154,SC2181
# TODO:https://gitee.com/api/v5/swagger#/patchV5ReposOwnerRepoReleasesId
___x_cmd_gitlab_repo_release_update(){
    param:scope  ___x_cmd_gt
    param:dsl    '
options:
    #1|--release        "Release ID"                <>:NatureNumber
    --tag               "Please provide tag name"   <>
    --name              "Release name"              <>
    --body              "Release Description"       <>
    --prerelease        "Is release version"        <>:Bool="false"
'
    param:run
    ______x_cmd_gitlab_repo_release_init_owner_repo_and_release
    ___x_cmd_gitlab_http patch "/v5/repos/${owner_repo}/releases/${release}" \
        tag_name="$tag" name body prerelease 1>/dev/null 2>&1
    [ $? -ne 0 ] && gt_log error "Update release failure: $name by $owner_repo $release" && return 1
    ___x_cmd_ui tf "true" "Success release" "name: $name" "body: $body" "prerelease: $prerelease"  && return 0
}

# TODO: https://gitee.com/api/v5/swagger#/deleteV5ReposOwnerRepoReleasesId
___x_cmd_gitlab_repo_release_rm(){
    param:scope  ___x_cmd_gt
    param:dsl    '
options:
    #1|--release        "Release ID"                <>:NatureNumber
'
    param:run

    ______x_cmd_gitlab_repo_release_init_owner_repo_and_release
    ___x_cmd_gitlab_http delete "/v5/repos/${owner_repo}/releases/$release"
}

# TODO: https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoReleasesLatest
___x_cmd_gitlab_repo_release_latest(){
    param:scope     ___x_cmd_gt
    param:dsl    '
options:
    #1|--repo   "Provide owner name and repo name.(default:the current user repo)"   <>:RepoName
'
    param:run

    ___x_cmd_gitlab_param_init_owner_repo
    ___x_cmd_gitlab_http get "/v5/repos/${owner_repo}/releases/latest"
}

# TODO: https://gitee.com/api/v5/swagger#/getV5ReposOwnerRepoReleasesId
___x_cmd_gitlab_repo_release_info(){
    param:scope     ___x_cmd_gt
    param:dsl    '
options:
    #1|--release        "Release ID"                <>:NatureNumber
'
    param:run

    ______x_cmd_gitlab_repo_release_init_owner_repo_and_release
    ___x_cmd_gitlab_http get "/v5/repos/${owner_repo}/releases/${release}"
}
