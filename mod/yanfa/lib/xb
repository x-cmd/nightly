# shellcheck shell=sh disable=SC3043,2120 # xrc

# Section: git

___x_cmd_yanfa_xb(){
    param:dsl <<A
subcommand:
    ls          "list modules"
    update      "clone or update all repos"
    commit      "clone or update all repos"
    push        "clone or update all repos"
A
    param:run

    if [ -z "${PARAM_SUBCMD}" ]; then
        ___x_cmd_yanfa_xb_update
        return
    fi

    "___x_cmd_yanfa_xb_${PARAM_SUBCMD}" "$@"
}

___x_cmd_yanfa_xb_ls(){
    param:void
    ___x_cmd_yanfa_mod_ls "$@"
}

___x_cmd_yanfa_xb_commit(){         ___x_cmd_yanfa_xb_foreach "${1:-$HOME}" ___x_cmd_yanfa_git_commit;     }
___x_cmd_yanfa_xb_update(){         ___x_cmd_yanfa_xb_foreach "${1:-$HOME}" ___x_cmd_yanfa_git_update;     }
___x_cmd_yanfa_xb_push(){           ___x_cmd_yanfa_xb_foreach "${1:-$HOME}" ___x_cmd_yanfa_git_push;       }

___x_cmd_yanfa_xb_foreach()(
    local dir="${1:-$HOME}"; shift
    yanfa:info "Execute concurrently(con=$___X_CMD_YANFA_CONCURRENCY): $*"

    local ___X_CMD_JOB_WRAPPER=silent
    x mcd "$dir/x-bash" || return 1

    ___x_cmd_yanfa_xb_ls | x readl mod -- eval interval=1 x job put "$___X_CMD_YANFA_CONCURRENCY" org=x-bash name="\$mod" x retry "$@" | cat
    # Both not working well: `wait` or `x job wait`
)

## EndSection
