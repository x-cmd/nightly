# shellcheck shell=sh disable=SC2039,SC1090,SC3043,SC2263,SC2120    # xrc

# Section(ls_remote): list_url, version_info
___x_cmd_env_scala_list_url(){
    printf "https://www.scala-lang.org/download/all.html"
}

___x_cmd_env_scala_version_info(){
	awk -v pattern="$pattern"  'match($0, /\/[0-9.]+.html/) {
        version = substr($0, RSTART+1, RLENGTH-6)
        if (version ~ pattern) { print version }
    }'
}
## EndSection

# Section(download): download_url
___x_cmd_env_scala_download_url(){
	local version="${1:?Provide a version}"
    # TODO: optimizable
    case $version in
        2.10*|2.13*|2.12*|2.11.11|2.11.12) printf "https://downloads.lightbend.com/scala/%s/scala-%s.zip" "$version" $version   ;;
        2.11*) printf "http://downloads.typesafe.com/scala/%s/scala-%s.zip"  "$version" "$version"                                    ;;
        3.* )  printf "https://github.com/lampepfl/dotty/releases/download/%s/scala3-%s.zip" "$version" "$version"                    ;;
    esac
}

___x_cmd_env_scala_copy_to_unpackdir(){
    chmod -R +x "$unpack_dir"/*/bin/*
}
## EndSection

# Section: ui_catsel
# TODO: Should be optimized
___x_cmd_env_scala_ui_catsel(){
    case "$#" in
        0)  ___x_cmd_env_scala_ls_remote | awk '{ split($0,arr,"."); vmap[arr[1]]=1 } END{ for(key in vmap){print key} }' ;;
        1)  ___x_cmd_env_scala_ls_remote | awk '{ split($0,arr,"."); vmap[arr[2]]=1 } END{ for(key in vmap){print key} }' ;;
		2)  ___x_cmd_env_scala_ls_remote | grep "$1" | grep "$2" | awk -v a="$1" -v b="$2" '{ split($0,arr,a"."b"."); if(arr[1]=="" && arr[2]!=""){ vmap[$0]=1 } } END{ for(key in vmap){ print key } }' ;;
    esac
}

## EndSection